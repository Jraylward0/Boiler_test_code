//This file was generated from (Commercial) UPPAAL 4.0.14 (rev. 5615), May 2014

/*

*/
E<> Controller1.RELEASE_STEAM

/*

*/
E<> Controller1.START_PUMP

/*

*/
E<> Controller1.SHUT_DOWN

/*
It is always the case that the pump will only be started if the water level is inbetween w1 and w2 and within the 10 water unit boundaries 
*/
A[] (Controller1.START_PUMP) imply (w >= w1 - 10 && w <= w2 - 10)

/*
Exists a path that the Pump shows it has finished when either Pump 1 or Pump 2 has finished
*/
E<> (Pump1.PUMP_FINISHED) imply (Pump1.PUMP_1 || Pump1.PUMP_2)

/*
It is always the case that the SHUT_DOWN state is only reached when there has been 5 unsuccessful polls. This will then send a communication which will emergency stop the system. 
*/
A[] (Controller1.SHUT_DOWN) imply (polls == 5)

/*

*/
E<> Controller1.GENERATE_STEAM

/*

*/
(Controller1.PRESS_EMERGENCY_STOP) --> (Controller1.SHUT_DOWN)

/*
If the WATER_ERROR state is reached it will signal the boiler to activate an emergency stop 
*/
(Sensor1.WATER_ERROR) --> Boiler1.EMERGENCY_STOP_BUTTON

/*
Always the case that the water returns it is OK, when it is inbetween w1 and w2
*/
A[] Sensor1.WATER_OK imply (w >= w1 && w <= w2)

/*

*/
E<> Sensor1.STEAM_OK

/*
Steam OK is only returned in all paths when the steam is less than the maximum steam rate
*/
A[] (Sensor1.STEAM_OK) imply (s <= sMAX)

/*
A path exists where either Pump 1 is activated or Pump 2 is activated
*/
E<> (Pump1.PUMP_1 || Pump1.PUMP_2)

/*
System is deadlock free
*/
A[] not deadlock
